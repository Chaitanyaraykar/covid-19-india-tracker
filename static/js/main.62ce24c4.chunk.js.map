{"version":3,"sources":["api/index.js","components/card/card.component.jsx","components/chart/chart.component.jsx","components/header/header.component.jsx","components/state-picker/state-picker.component.jsx","App.js","index.js","assets/covid-19-india-tracker(1).jpg"],"names":["historyDataUrl","fetchData","value","url","a","localeCompare","axios","get","response","data","summary","total","deaths","discharged","confirmedCasesIndian","confirmedCasesForeign","lastUpdate","lastOriginUpdate","stateListFromResponse","regional","stateList","map","state","loc","infected","totalConfirmed","recovered","casesIndian","casesForeign","Card","changedCardData","Object","keys","length","xs","md","Grid","container","className","item","CardContent","Typography","start","end","duration","separator","Date","toDateString","responseData","Chart","stateChoosen","useEffect","fetchfunction","summaryArray","consizedSummaryArray","reverse","filter","index","regionalArray","consizedRegionalArray","tempArray","k","i","j","assign","stateChoosenArray","console","log","dateArray","day","labels","datasets","label","pointHoverRadius","borderColor","backgroundColor","pointBorderColor","pointBackgroundColor","options","title","display","text","scales","yAxes","scaleLabel","labelString","ticks","min","xAxes","Header","src","covid_img","alt","StatePicker","handleStateChange","FormControl","InputLabel","NativeSelect","defaultValue","onChange","event","target","key","App","setState","cardData","this","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.62ce24c4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst totalDataUrl = \"https://api.rootnet.in/covid19-in/stats/latest\";\r\nconst historyDataUrl = \"https://api.rootnet.in/covid19-in/stats/history\";\r\n\r\nexport const fetchData = async (value, url) => {\r\n    if (url.localeCompare(totalDataUrl) === 0) {\r\n        const response = await axios.get(url);\r\n\r\n        const { total, deaths, discharged, confirmedCasesIndian, confirmedCasesForeign } = response.data.data.summary;\r\n        const lastUpdate = response.data.lastOriginUpdate;\r\n        const stateListFromResponse = response.data.data.regional;\r\n\r\n        const stateList = stateListFromResponse.map(({ loc, totalConfirmed, deaths, discharged, confirmedCasesIndian, confirmedCasesForeign }) => {\r\n            return {\r\n                state: loc,\r\n                infected: totalConfirmed,\r\n                deaths: deaths,\r\n                recovered: discharged,\r\n                casesIndian: confirmedCasesIndian,\r\n                casesForeign: confirmedCasesForeign,\r\n                lastUpdate\r\n            }\r\n        })\r\n\r\n        if (value === \"send_card_data\") {\r\n            return {\r\n                infected: total,\r\n                deaths: deaths,\r\n                recovered: discharged,\r\n                casesIndian: confirmedCasesIndian,\r\n                casesForeign: confirmedCasesForeign,\r\n                lastUpdate\r\n            };\r\n        }\r\n\r\n        else if (value === \"send_state_data\") {\r\n            return stateList;\r\n        }\r\n\r\n    }\r\n\r\n    else if (url.localeCompare(historyDataUrl) === 0) {\r\n        const response = await axios.get(historyDataUrl);\r\n        \r\n        return response.data.data;\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './card.styles.scss';\r\nimport { Grid, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nconst Card = ({ changedCardData }) => {\r\n    if (Object.keys(changedCardData).length === 0) {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n    const { infected, recovered, deaths, lastUpdate } = changedCardData;\r\n\r\n    return (\r\n        <div xs={12} md={3}>\r\n            <Grid container className='grid-container'>\r\n            <Grid item className={`infected common-to-card`}>\r\n                <CardContent>\r\n                    <Typography><b>Infected</b></Typography>\r\n                    <Typography>\r\n                        <CountUp start={0} end={infected} duration={1.5} separator=',' />\r\n                    </Typography>\r\n                    <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography>Number of affected by COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item className={`active common-to-card`}>\r\n                <CardContent>\r\n                    <Typography><b>Active</b></Typography>\r\n                    <Typography>\r\n                        <CountUp start={0} end={infected - recovered - deaths} duration={1.5} separator=',' />\r\n                    </Typography>\r\n                    <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography>Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item className={`recovered common-to-card`}>\r\n                <CardContent>\r\n                    <Typography><b>Recovered</b></Typography>\r\n                    <Typography>\r\n                        <CountUp start={0} end={recovered} duration={1.5} separator=',' />\r\n                    </Typography>\r\n                    <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography>Number of recoveries from COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item className={`deaths common-to-card`}>\r\n                <CardContent>\r\n                    <Typography><b>Deaths</b></Typography>\r\n                    <Typography>\r\n                        <CountUp start={0} end={deaths} duration={1.5} separator=',' />\r\n                    </Typography>\r\n                    <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography>Number of deaths from COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React, { useEffect } from 'react';\r\nimport './chart.styles.scss';\r\nimport { fetchData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst historyDataUrl = \"https://api.rootnet.in/covid19-in/stats/history\";\r\nlet responseData = [];\r\n\r\nconst Chart = ({ stateChoosen }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchfunction = async () => {\r\n            responseData = await fetchData(\"send_history\", historyDataUrl);\r\n        }\r\n\r\n        fetchfunction();\r\n    }, []);\r\n\r\n    if (responseData.length > 0) {\r\n        let summaryArray = responseData.map(({ summary }) => summary);\r\n        summaryArray = summaryArray.reverse();\r\n        let consizedSummaryArray = summaryArray.filter((item, index) => index <= 19).map(item => item).reverse();\r\n        \r\n        let regionalArray = responseData.map(({ regional }) => regional);\r\n        regionalArray = regionalArray.reverse();\r\n        let consizedRegionalArray = regionalArray.filter((item, index) => index <= 19).map((item) => item).reverse();\r\n\r\n        let tempArray = [], k = 0;\r\n        for (let i = 0; i < 20; i++) {\r\n            tempArray[i] = {};\r\n        }\r\n        for (let i = 0; i < consizedRegionalArray.length; i++) {\r\n            for (let j = 0; j < consizedRegionalArray[i].length; j++) {\r\n                if (consizedRegionalArray[i][j].loc.localeCompare(stateChoosen) === 0) {\r\n                    tempArray[k] = Object.assign(tempArray[k], consizedRegionalArray[i][j]);\r\n                    k++;\r\n                }\r\n            }\r\n        }\r\n\r\n        const stateChoosenArray = (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray : tempArray;\r\n\r\n        console.log(stateChoosenArray);\r\n\r\n        let dateArray = responseData.map(({ day }) => day)\r\n        dateArray = dateArray.reverse();\r\n        let consizedDateArray = dateArray.filter((item, index) => index <= 19).map(item => item).reverse();\r\n        \r\n        const data = {\r\n            labels: consizedDateArray,\r\n            datasets: [\r\n                {\r\n                    label: \"Infected\",\r\n                    data: (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray.map((item) => item.total) : stateChoosenArray.map(item => item.totalConfirmed),\r\n                    pointHoverRadius: 5,\r\n                    borderColor: ['rgba(0,0,255,0.2)'],\r\n                    backgroundColor: ['rgba(0,0,255,0.2)'],\r\n                    pointBorderColor: ['rgba(0,0,255,0.2)'],\r\n                    pointBackgroundColor: ['rgba(0,0,255,0.2)']\r\n                },\r\n                {\r\n                    label: \"Active\",\r\n                    data: (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray.map((item) => item.total - item.deaths - item.discharged) : stateChoosenArray.map(item => item.totalConfirmed - item.deaths - item.discharged),\r\n                    pointHoverRadius: 5,\r\n                    borderColor: ['rgba(0,0,255,0.5)'],\r\n                    backgroundColor: ['rgba(0,0,255,0.5)'],\r\n                    pointBorderColor: ['rgba(0,0,255,0.5)'],\r\n                    pointBackgroundColor: ['rgba(0,0,255,0.5)']\r\n\r\n                },\r\n                {\r\n                    label: \"Recovered\",\r\n                    data: (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray.map((item) => item.discharged) : stateChoosenArray.map(item => item.discharged),\r\n                    pointHoverRadius: 5,\r\n                    borderColor: ['rgba(0,255,0,0.5)'],\r\n                    backgroundColor: ['rgba(0,255,0,0.5)'],\r\n                    pointBorderColor: ['rgba(0,255,0,0.5)'],\r\n                    pointBackgroundColor: ['rgba(0,255,0,0.5)']\r\n\r\n                },\r\n                {\r\n                    label: \"Deaths\",\r\n                    data: (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray.map((item) => item.deaths) : stateChoosenArray.map(item => item.deaths),\r\n                    pointHoverRadius: 5,\r\n                    borderColor: ['rgba(255,0,0,0.8)'],\r\n                    backgroundColor: ['rgba(255,0,0,0.8)'],\r\n                    pointBorderColor: ['rgba(255,0,0,0.8)'],\r\n                    pointBackgroundColor: ['rgba(255,0,0,0.8)']\r\n                }\r\n            ]\r\n        };\r\n\r\n        const options = {\r\n            title: {\r\n                display: true,\r\n                text: \"COVID-19 Data Analytics for last 20 days\"\r\n            },\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Number of cases'\r\n                        },\r\n                        ticks: {\r\n                            min: 0,\r\n                        }\r\n                    }\r\n                ],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Last 20 Days'\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n\r\n        return (\r\n            <center>\r\n                <div className='chart-container'>\r\n                    <Line data={data} options={options} />\r\n                </div>\r\n            </center>\r\n\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <center>\r\n                <big>\r\n                    Loading... App Please Wait!<br/>\r\n                    If the problem persists refresh the page\r\n                </big>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport './header.styles.scss';\r\nimport covid_img from '../../assets/covid-19-india-tracker(1).jpg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <center className='header'>\r\n            <img src={covid_img} alt=\"covid-image\" className='covid-image'/>\r\n            COVID-19_INDIA_TRACKER\r\n            <img src={covid_img} alt=\"covid-image\" className='covid-image'/>\r\n        </center>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n            ","import React from 'react';\r\nimport { FormControl, NativeSelect, InputLabel } from '@material-ui/core';\r\nimport './state-picker.styles.scss'; \r\n\r\nconst StatePicker = ({ handleStateChange, stateList }) => {\r\n\r\n    if(stateList.length === 0){\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n        \r\n    return (\r\n        <center className='form-control'>\r\n            <FormControl >\r\n            <InputLabel >Select any one State/U T</InputLabel>\r\n            <NativeSelect defaultValue=\"India\" onChange={(event) => handleStateChange(event.target.value)} className='native-select' >\r\n                <option value=\"India\">India</option>\r\n                {\r\n                    stateList.map(({state}, index) => <option key={index} value={state}>{state}</option>) \r\n                }\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </center>\r\n        \r\n    )\r\n}\r\n\r\nexport default StatePicker;\r\n                \r\n                \r\n\r\n   ","import React from 'react';\r\nimport './App.scss';\r\nimport { fetchData } from './api';\r\nimport { Header, Card, StatePicker, Chart } from './components';\r\n\r\nconst totalDataUrl = \"https://api.rootnet.in/covid19-in/stats/latest\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            stateChoosen: '',\r\n            stateList: [],\r\n            cardData: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ stateList: await fetchData(\"send_state_data\", totalDataUrl), cardData: await fetchData(\"send_card_data\", totalDataUrl) });\r\n    }\r\n\r\n    handleStateChange = async (state) => {\r\n        await this.setState({ stateChoosen: state });\r\n    }\r\n\r\n    render() {\r\n        const { stateChoosen, stateList, cardData } = this.state;\r\n\r\n        let changedCardData = {};\r\n        changedCardData = Object.assign(changedCardData, cardData);\r\n\r\n        stateList.filter((data) => {\r\n            if (data.state.localeCompare(stateChoosen) === 0) {\r\n                changedCardData = Object.assign(changedCardData, data);\r\n            }\r\n        })\r\n\r\n        return (\r\n            <div className='component-container'>\r\n                <Header />\r\n                <Card changedCardData={changedCardData} />\r\n                <StatePicker stateList={stateList} handleStateChange={this.handleStateChange} />\r\n                <Chart stateChoosen={stateChoosen}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/covid-19-india-tracker(1).3dcebebb.jpg\";"],"sourceRoot":""}